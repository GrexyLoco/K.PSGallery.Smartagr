name: 🚀 Smart PowerShell Module Release Pipeline

# 🎯 Triggers: Push to master branch (e.g., PR merge)  
# 📋 Required Repository Variables:
# - UBUNTU_VERSION: Ubuntu runner version (e.g., "ubuntu-22.04")
# - MODULE_NAME: PowerShell module name for dispatch
# - TARGET_REPOSITORY: Target repository for auto-publish dispatch  
# 📋 Required Repository Secrets:  
# - REPO_DISPATCH_TOKEN: Personal Access Token for cross-repo dispatch

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:
    # Optional manual trigger for testing
    inputs:
      test:
        description: 'Run validation only (no dispatch)'
        required: false
        default: false
        type: boolean


env:
  # 🌍 Global environment variables for consistency
  RELEASE_AUTHOR: "github-actions[bot]"
  RELEASE_EMAIL: "github-actions[bot]@users.noreply.github.com"
  # 📦 Module Configuration (can be overridden by repository variables)
  MODULE_NAME: ${{ vars.MODULE_NAME || 'K.PSGallery.SemanticVersioning' }}
  TARGET_REPOSITORY: ${{ vars.TARGET_REPOSITORY || 'GrexyLoco/K.PSGallery.AutoPublish' }}

jobs:
  validate:
    name: 🔐 Security & 🧪 Tests
    runs-on: ${{ vars.UBUNTU_VERSION || 'ubuntu-22.04' }}
    outputs:
      test-success: ${{ steps.validation.outputs.test-success }}
      total-tests: ${{ steps.validation.outputs.total-tests }}
      passed-tests: ${{ steps.validation.outputs.passed-tests }}
      failed-tests: ${{ steps.validation.outputs.failed-tests }}
      skipped-tests: ${{ steps.validation.outputs.skipped-tests }}
      test-duration: ${{ steps.validation.outputs.test-duration }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔐 Validate PowerShell Module
        id: validation
        uses: GrexyLoco/K.Actions.PSModuleValidation@v1.0.1
        with:
          test-path: './Tests'
          output-path: './TestResults.xml'
          validate-all-codebase: 'false'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          module-name: ${{ env.MODULE_NAME }}

  dispatch:
    name: 🚀 Trigger Auto-Publish Pipeline
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.test-success == 'true'
    steps:
      - name: 📤 Dispatch to auto-publish workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}
          repository: ${{ env.TARGET_REPOSITORY }}
          event-type: publish-module
          client-payload: |
            {
              "module": "${{ env.MODULE_NAME }}",
              "repository": "${{ github.repository }}",
              "ref": "${{ github.ref }}"
            }
            
      - name: 📝 Dispatch Summary
        if: always()
        shell: bash
        run: |
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          ## 🚀 Auto-Publish Pipeline Triggered
          
          **Module:** `${{ env.MODULE_NAME }}`
          **Target Repository:** `${{ env.TARGET_REPOSITORY }}`
          **Source Repository:** `${{ github.repository }}`
          **Branch:** `${{ github.ref_name }}`
          **Status:** ✅ Dispatch sent successfully
          
          The auto-publish pipeline will now handle:
          - 🔢 Semantic version calculation
          - 📦 Module packaging
          - 🚀 PowerShell Gallery publishing
          - 🏷️ GitHub release creation
          
          ---
          EOF
